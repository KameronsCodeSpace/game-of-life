{"ast":null,"code":"var _jsxFileName = \"/Users/arzhuldahaku/Documents/MyFiles/Pursuit/Portfolio/Projects/game-of-life/src/Components/Main.jsx\";\nimport React from 'react';\nimport Grid from '../Components/Grid';\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n\n    this.selectBox = (row, col) => {\n      let gridCopy = arrayClone(this.state.gridFull);\n      gridCopy[row][col] = !gridCopy[row][col];\n      this.setState({\n        gridFull: gridCopy\n      });\n    };\n\n    this.seed = () => {\n      let gridCopy = arrayClone(this.state.gridFull);\n\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.cols; j++) {\n          if (Math.floor(Math.random() * 4 === 1)) {\n            gridCopy[i][j] = true;\n          }\n        }\n      }\n\n      this.setState({\n        gridFull: gridCopy\n      });\n    };\n\n    this.speed = 100;\n    this.rows = 30;\n    this.cols = 50;\n    this.state = {\n      generation: 0,\n      gridFull: Array(this.rows).fill().map(() => Array(this.cols).fill(false))\n    };\n  }\n\n  componentDidMount() {\n    this.seed();\n  }\n\n  render() {\n    let {\n      gridFull\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, \"Game of Life\"), /*#__PURE__*/React.createElement(Grid, {\n      gridFull: gridFull,\n      rows: this.rows,\n      cols: this.cols,\n      selectBox: this.selectBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \"Generations: \", this.state.generation));\n  }\n\n}\n\nfunction arrayClone(arr) {\n  return JSON.parse(JSON.stringify(arr));\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/arzhuldahaku/Documents/MyFiles/Pursuit/Portfolio/Projects/game-of-life/src/Components/Main.jsx"],"names":["React","Grid","Main","Component","constructor","selectBox","row","col","gridCopy","arrayClone","state","gridFull","setState","seed","i","rows","j","cols","Math","floor","random","speed","generation","Array","fill","map","componentDidMount","render","arr","JSON","parse","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,GAAG;AACV;;AADU,SAYdC,SAZc,GAYF,CAACC,GAAD,EAAMC,GAAN,KAAc;AACtB,UAAIC,QAAQ,GAAGC,UAAU,CAAC,KAAKC,KAAL,CAAWC,QAAZ,CAAzB;AACAH,MAAAA,QAAQ,CAACF,GAAD,CAAR,CAAcC,GAAd,IAAqB,CAACC,QAAQ,CAACF,GAAD,CAAR,CAAcC,GAAd,CAAtB;AACA,WAAKK,QAAL,CAAc;AACVD,QAAAA,QAAQ,EAAEH;AADA,OAAd;AAGH,KAlBa;;AAAA,SAoBdK,IApBc,GAoBP,MAAM;AACT,UAAIL,QAAQ,GAAGC,UAAU,CAAC,KAAKC,KAAL,CAAWC,QAAZ,CAAzB;;AACA,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,IAAzB,EAA+BD,CAAC,EAAhC,EAAoC;AAChC,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,IAAzB,EAA+BD,CAAC,EAAhC,EAAoC;AAChC,cAAIE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAAhB,KAAsB,CAAjC,CAAJ,EAAyC;AACrCZ,YAAAA,QAAQ,CAACM,CAAD,CAAR,CAAYE,CAAZ,IAAiB,IAAjB;AACH;AACJ;AACJ;;AACD,WAAKJ,QAAL,CAAc;AACVD,QAAAA,QAAQ,EAAEH;AADA,OAAd;AAGH,KAhCa;;AAEV,SAAKa,KAAL,GAAa,GAAb;AACA,SAAKN,IAAL,GAAY,EAAZ;AACA,SAAKE,IAAL,GAAY,EAAZ;AAEA,SAAKP,KAAL,GAAa;AACTY,MAAAA,UAAU,EAAE,CADH;AAETX,MAAAA,QAAQ,EAAEY,KAAK,CAAC,KAAKR,IAAN,CAAL,CAAiBS,IAAjB,GAAwBC,GAAxB,CAA4B,MAAMF,KAAK,CAAC,KAAKN,IAAN,CAAL,CAAiBO,IAAjB,CAAsB,KAAtB,CAAlC;AAFD,KAAb;AAIH;;AAwBDE,EAAAA,iBAAiB,GAAG;AAChB,SAAKb,IAAL;AACH;;AAEDc,EAAAA,MAAM,GAAG;AACL,QAAI;AAAEhB,MAAAA;AAAF,QAAe,KAAKD,KAAxB;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,oBAAC,IAAD;AACI,MAAA,QAAQ,EAAEC,QADd;AAEI,MAAA,IAAI,EAAE,KAAKI,IAFf;AAGI,MAAA,IAAI,EAAE,KAAKE,IAHf;AAII,MAAA,SAAS,EAAE,KAAKZ,SAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkB,KAAKK,KAAL,CAAWY,UAA7B,CARJ,CADJ;AAYH;;AArD8B;;AAwDnC,SAASb,UAAT,CAAoBmB,GAApB,EAAyB;AACrB,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,GAAf,CAAX,CAAP;AACH;;AAED,eAAe1B,IAAf","sourcesContent":["import React from 'react';\nimport Grid from '../Components/Grid'\n\nclass Main extends React.Component {\n    constructor() {\n        super();\n        this.speed = 100;\n        this.rows = 30;\n        this.cols = 50;\n\n        this.state = {\n            generation: 0,\n            gridFull: Array(this.rows).fill().map(() => Array(this.cols).fill(false))\n        }\n    }\n\n    selectBox = (row, col) => {\n        let gridCopy = arrayClone(this.state.gridFull);\n        gridCopy[row][col] = !gridCopy[row][col];\n        this.setState({\n            gridFull: gridCopy,\n        })\n    }\n\n    seed = () => {\n        let gridCopy = arrayClone(this.state.gridFull);\n        for (let i = 0; i < this.rows; i++) {\n            for (let j = 0; j < this.cols; j++) {\n                if (Math.floor(Math.random() * 4 === 1)) {\n                    gridCopy[i][j] = true;\n                }\n            }\n        }\n        this.setState({\n            gridFull: gridCopy,\n        })\n    }\n\n    componentDidMount() {\n        this.seed();\n    }\n\n    render() {\n        let { gridFull } = this.state\n        return (\n            <div>\n                <h1>Game of Life</h1>\n                <Grid\n                    gridFull={gridFull}\n                    rows={this.rows}\n                    cols={this.cols}\n                    selectBox={this.selectBox}\n                />\n                <h2>Generations: {this.state.generation}</h2>\n            </div>\n        );\n    }\n}\n\nfunction arrayClone(arr) {\n    return JSON.parse(JSON.stringify(arr));\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}